{"version":3,"sources":["Components/SearchBox.js","Components/Card.js","animations.js","Containers/BooksContainer.js","App.js","serviceWorker.js","index.js","Assets/Images/noImg.png"],"names":["FormContainer","styled","div","_templateObject","SearchBox","react_default","a","createElement","Form","onSubmit","this","props","submitHandler","TextInput","placeholder","onChange","changeHandler","value","searchQuery","Button","style","marginTop","type","primary","label","Fragment","index_es","icon","Component","CardContainer","Card_templateObject","CoverImg","img","_templateObject2","InfoPane","_templateObject3","MoreBtn","_templateObject4","Card","src","imgSrc","alt","title","authors","publisher","href","link","keyframes","animations_templateObject","flip","animations_templateObject2","ContainerDiv","BooksContainer_templateObject","LoadingAnim","FontAwesomeIcon","BooksContainer_templateObject2","BooksContainer","display","loading","size","bookData","map","book","idx","bookInfo","volumeInfo","Components_Card","key","id","imageLinks","thumbnail","noImg","length","join","previewLink","err","library","add","faSearch","faBook","theme","global","font","family","height","MainWindow","App_templateObject","App","state","inputChangeHandler","e","_this","setState","target","axios","get","params","q","then","res","data","items","catch","_this2","Grommet","Components_SearchBox","Containers_BooksContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.299dd1b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Form, TextInput, Button } from \"grommet\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst FormContainer = styled.div`\n    margin: 2rem;\n    width: 50%;\n    text-align: center;\n    align-self: center;\n`\n\nclass SearchBox extends Component {\n\n    render() {\n        return (\n            <FormContainer>\n                <Form onSubmit={this.props.submitHandler}>\n                    <div>\n                        <TextInput\n                            placeholder=\"Search by Title or Author\"\n                            onChange={this.props.changeHandler}\n                            value={this.props.searchQuery}\n                        />\n                        <Button\n                            style={{marginTop: \"1rem\"}}\n                            type=\"submit\"\n                            primary\n                            label={<><FontAwesomeIcon icon=\"search\"/>&nbsp;Search</>}/>\n                    </div>\n                </Form>\n            </FormContainer>\n        )\n    }\n}\n\nexport default SearchBox;\n","import React from 'react';\nimport styled from 'styled-components';\n// import { Button } from 'grommet';\n// import { bounce } from '../animations';\n\nconst CardContainer = styled.div`\n    position: relative;\n    font-size: 0.9rem;\n    margin: 20px;\n    background-color: white;\n    border-radius: 10px;\n    display: grid;\n    grid-template-columns: 128px 1fr;\n    grid-template-rows: 1fr;\n    width: 600px;\n    height: 208px;\n    padding: 5px 20px;\n    overflow: visible;\n    box-sizing: border-box;\n    box-shadow: 2px 2px 18px -1px rgba(191,191,191,1);\n    transition: transform 0.2s ease-out;\n    &:hover {\n        transform: scale(1.05);\n        transition: transform 0.2s ease-out;\n    }\n\n    @media(max-width: 650px) {\n        @media(min-width: 421px) {\n            width: 550px;\n            font-size: 0.7rem;\n        }\n        @media(max-width: 420px) {\n        width: 320px;\n        font-size: 0.6rem;\n        }\n    }\n`\n\nconst CoverImg = styled.img`\n    margin-top: -25px;\n    /* grid-row: 1 / span 2; */\n    grid-column: 1 / span 1;\n    display: block;\n    width: 128px;\n    height: 198px;\n    box-shadow: 2px 2px 18px -1px rgba(191,191,191,1);\n`\n\nconst InfoPane = styled.div`\n    /* width: 100%; */\n    /* grid-row: 1 / span 2; */\n    padding-left: 20px;\n    grid-column: 2 / span 1;\n`\n\nconst MoreBtn = styled.a`\n    display: block;\n    position: absolute;\n    bottom: 4px;\n    right: 4px;\n    padding: 5px;\n    border-radius: 10px;\n    background-color: #6fd696;\n    font-size: 0.6rem;\n    text-decoration: none;\n    color: black;\n`\n\nconst Card = props => {\n    return (\n        <CardContainer>\n            <CoverImg src={props.imgSrc} alt={props.title}/>\n            <InfoPane>\n                <h3>{props.title}</h3>\n                <p><em>By:</em> {props.authors}</p>\n                <p><em>Publisher:</em> {props.publisher}</p>\n                {/* <a href={props.link}>More Info</a> */}\n            </InfoPane>\n            <MoreBtn href={props.link}>More Info</MoreBtn>\n        </CardContainer>\n    )\n}\n\nexport default Card;","import { keyframes } from \"styled-components\";\n\nexport const bounce = keyframes`\n    from,\n    20%,\n    53%,\n    80%,\n    to {\n        animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n        transform: translate3d(0, 0, 0);\n    }\n\n    40%,\n    43% {\n        animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n        transform: translate3d(0, -30px, 0);\n    }\n\n    70% {\n        animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n        transform: translate3d(0, -15px, 0);\n    }\n\n    90% {\n        transform: translate3d(0, -4px, 0);\n    }\n`;\n\nexport const flip = keyframes`\n    from {\n        transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg);\n        animation-timing-function: ease-out;\n    }\n\n    40% {\n        transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\n        rotate3d(0, 1, 0, -190deg);\n        animation-timing-function: ease-out;\n    }\n\n    50% {\n        transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\n        rotate3d(0, 1, 0, -170deg);\n        animation-timing-function: ease-in;\n    }\n\n    80% {\n        transform: perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0)\n        rotate3d(0, 1, 0, 0deg);\n        animation-timing-function: ease-in;\n    }\n\n    to {\n        transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);\n        animation-timing-function: ease-in;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Card from '../Components/Card';\nimport noImg from '../Assets/Images/noImg.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { flip } from '../animations';\n\nconst ContainerDiv = styled.div`\n    display: flex;\n    flex-flow: row;\n    flex-wrap: wrap;\n    max-width: 1450px;\n    justify-content: center;\n`\n\nconst LoadingAnim = styled(FontAwesomeIcon)`\n    margin-top: 100%;\n    animation: ${flip} 1s linear infinite;\n    color: lightgrey;\n`\n\nconst BooksContainer = props => {\n\n    let display = null;\n    if (props.loading) {\n        display = <LoadingAnim icon=\"book\" size=\"6x\"/>\n    } else if (props.bookData) {\n        display = props.bookData.map((book, idx) => {\n            const bookInfo = book.volumeInfo;\n            return (\n                <Card\n                    key={book.id}\n                    imgSrc={bookInfo.imageLinks? bookInfo.imageLinks.thumbnail: noImg}\n                    title={bookInfo.title}\n                    authors={\n                        (bookInfo.authors)\n                            ? (bookInfo.authors.length > 1)\n                                ? bookInfo.authors.join(', ')\n                                : bookInfo.authors\n                            : \"--None Found--\"\n                        }\n                    publisher={bookInfo.publisher? bookInfo.publisher: \"--None Found--\"}\n                    link={bookInfo.previewLink}\n                />\n            )\n        })\n    }\n    if (props.err) {\n        display = <h3>Unable to Fetch Book Data</h3>\n    }\n\n    return (\n        <ContainerDiv>\n            {display}\n        </ContainerDiv>\n    )\n}\n\nexport default BooksContainer;\n","import React, { Component } from \"react\";\nimport { Grommet } from \"grommet\";\nimport styled from \"styled-components\";\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n// import MainPage from './Containers/MainPage';\nimport SearchBox from './Components/SearchBox';\nimport axios from 'axios';\nimport BooksContainer from \"./Containers/BooksContainer\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faSearch,\n    faBook\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n    faSearch,\n    faBook\n    )\n\nconst theme = {\n    global: {\n        font: {\n            family: \"Montserrat\",\n            size: \"14px\",\n            height: \"20px\"\n        }\n    }\n};\n\nconst MainWindow = styled.div`\n    display: flex;\n    flex-flow: column;\n    width: 100%;\n    height: 100vh;\n    justify-content: flex-start;\n    align-items: center;\n`\n\nclass App extends Component {\n\n    state = {\n        searchQuery: '',\n        bookData: null,\n        err: null,\n        loading: false\n    }\n\n    inputChangeHandler = e => {\n        this.setState({searchQuery: e.target.value})\n    }\n\n    submitHandler = () => {\n        this.setState({loading: true})\n        axios.get('https://www.googleapis.com/books/v1/volumes', {\n            params: {\n                q: this.state.searchQuery\n            }\n        })\n        .then(res => this.setState({bookData: res.data.items, loading: false, searchQuery: ''}))\n        .catch(err => this.setState({err: err, loading: false, searchQuery: ''}))\n    }\n\n    render() {\n        return (\n            <Grommet theme={theme}>\n                <MainWindow>\n                    <h1 >Book Finder</h1>\n                    <SearchBox\n                        changeHandler={e => this.inputChangeHandler(e)}\n                        submitHandler={this.submitHandler}\n                        searchQuery={this.state.searchQuery}\n                    />\n                    <BooksContainer {...this.state}/>\n                </MainWindow>\n            </Grommet>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/noImg.ec6ec063.png\";"],"sourceRoot":""}